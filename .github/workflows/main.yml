name: Setup SSH Access to Runner

on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-ssh:
    runs-on: blacksmith-4vcpu-ubuntu-2204

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Install SSH Server
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-server
          sudo systemctl start sshd
          sudo systemctl enable sshd
          sudo mkdir -p /home/runner/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" | sudo tee -a /home/runner/.ssh/authorized_keys
          sudo chmod 600 /home/runner/.ssh/authorized_keys
          sudo chown runner:runner /home/runner/.ssh/authorized_keys

      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update
          sudo apt-get install -y ngrok

      - name: Start Ngrok and expose SSH
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          ngrok tcp 22 --log=stdout > ngrok.log &

      - name: Get Ngrok public address
        run: |
          sleep 10  # Give Ngrok time to initialize
          curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url' > ngrok_url.txt
          cat ngrok_url.txt

      - name: Add SSH key to GitHub Actions runner
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > my_ssh_key
          chmod 600 my_ssh_key

      - name: Test SSH connection
        run: |
          NGROK_URL=$(cat ngrok_url.txt)
          ssh -o StrictHostKeyChecking=no -i my_ssh_key runner@"${NGROK_URL#tcp://}"

      - name: Keep the workflow running
        run: sleep 21600  # Sleep for 6 hours to keep the runner alive
